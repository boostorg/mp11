# Copyright 2018, 2019 Peter Dimov
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt

cmake_minimum_required(VERSION 3.5...3.31)

project(boost_mp11 VERSION 1.89.0 LANGUAGES CXX)

if (BOOST_USE_MODULES)
  add_library(boost_mp11 STATIC)
  target_sources(boost_mp11 PUBLIC FILE_SET CXX_MODULES BASE_DIRS modules FILES modules/boost_mp11.cppm)
  set(__scope PUBLIC)
  
  # Enable and propagate C++23, import std, and the modules macro
  target_compile_features(boost_mp11 PUBLIC cxx_std_23)
  set_target_properties(boost_mp11 PROPERTIES CXX_MODULE_STD 1)
  target_compile_definitions(boost_mp11 PUBLIC BOOST_USE_MODULES)

else()
  add_library(boost_mp11 INTERFACE)
  target_compile_features(boost_mp11 INTERFACE cxx_alias_templates cxx_variadic_templates cxx_decltype)
  set(__scope INTERFACE)
endif()

add_library(Boost::mp11 ALIAS boost_mp11)
target_include_directories(boost_mp11 ${__scope} include)


if(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)

  # Required to call deprecated FetchContent_Populate
  if (CMAKE_VERSION VERSION_GREATER_EQUAL "3.30.0")
    cmake_policy(SET CMP0169 OLD)
  endif()

  # Fetch support files

  message(STATUS "Fetching BoostFetch.cmake")

  file(DOWNLOAD
    "https://raw.githubusercontent.com/boostorg/cmake/develop/include/BoostFetch.cmake"
    "${CMAKE_BINARY_DIR}/fetch_and_include/BoostFetch.cmake"
  )

  include("${CMAKE_BINARY_DIR}/fetch_and_include/BoostFetch.cmake")

  boost_fetch(boostorg/cmake TAG develop NO_ADD_SUBDIR)

  FetchContent_GetProperties(boostorg_cmake)

  list(APPEND CMAKE_MODULE_PATH ${boostorg_cmake_SOURCE_DIR}/include)

  # Testing (off by default)

  option(BUILD_TESTING "Build the tests." OFF)
  include(CTest)

  if(BUILD_TESTING)

    set(BUILD_TESTING OFF) # hide cache variable

    boost_fetch(boostorg/assert TAG develop EXCLUDE_FROM_ALL)
    boost_fetch(boostorg/config TAG develop EXCLUDE_FROM_ALL)
    boost_fetch(boostorg/core TAG develop EXCLUDE_FROM_ALL)
    boost_fetch(boostorg/static_assert TAG develop EXCLUDE_FROM_ALL)
    boost_fetch(boostorg/throw_exception TAG develop EXCLUDE_FROM_ALL)

    unset(BUILD_TESTING)

  endif()

  # Do not use the default BoostInstall versioned layout on Windows when standalone
  set(BOOST_INSTALL_LAYOUT "system" CACHE STRING "Installation layout (versioned, tagged, or system)")

  include(BoostInstall)

  boost_install(TARGETS boost_mp11 HEADER_DIRECTORY include/)

endif()

if(BUILD_TESTING)

  add_subdirectory(test)

endif()
